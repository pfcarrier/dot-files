" Use Vim settings, rather then Vi settings.
" This must be first, because it changes other options as a side effect.
set nocompatible
set nomodeline

" Ensure vim display correctly UTF-8 character
:set encoding=utf-8
:set fileencoding=utf-8

" Load vim-plug
source $HOME/work/dot-files/vim/plug.vim

" ================ General Config ====================

set number                      "Line numbers are good
set relativenumber
set backspace=indent,eol,start  "Allow backspace in insert mode
set history=1000                "Store lots of :cmdline history
set showcmd                     "Show incomplete cmds down the bottom
set showmode                    "Show current mode down the bottom
set visualbell                  "No sounds

" This makes vim act like all other editors, buffers can
" exist in the background without being in a window.
" http://items.sjbach.com/319/configuring-vim-right
set hidden

" ================ Turn Off Swap Files ==============

set noswapfile
set nobackup
set nowb

" ================ Indentation ======================

set autoindent
set smartindent
set smarttab
set shiftwidth=2
set softtabstop=2
set tabstop=2
set expandtab

"filetype plugin on
"filetype indent on

" Display tabs and trailing spaces visually
set list listchars=tab:\ \ ,trail:·

"set nowrap       "Don't wrap lines
"set linebreak    "Wrap lines at convenient points

" ================ Folds ============================

set foldmethod=indent   "fold based on indent
set foldnestmax=3       "deepest fold is 3 levels
set nofoldenable        "dont fold by default

" ============== Remember Cursor location ===========

" Tell vim to remember certain things when we exit
"  '10  :  marks will be remembered for up to 10 previously edited files
"  "100 :  will save up to 100 lines for each register
"  :20  :  up to 20 lines of command-line history will be remembered
"  %    :  saves and restores the buffer list
"  n... :  where to save the viminfo files
if !has('nvim')
  set viminfo='10,\"100,:20,%,n~/.viminfo
endif

function! ResCur()
  if line("'\"") <= line("$")
    normal! g`"
    return 1
  endif
endfunction

augroup resCur
  autocmd!
  autocmd BufWinEnter * call ResCur()
augroup END

" ================ Scrolling ========================

set scrolloff=8         "Start scrolling when we're 8 lines away from margins
set sidescrolloff=15
set sidescroll=1

" =========== Toggle set paste/nopaste mode =========
"set pastetoggle=<F2>

" ======== Display a visual clue past col 80 ========
set colorcolumn=80
"highlight OverLength ctermbg=red ctermfg=white guibg=#592929
"match OverLength /\%>80v.\+/

" From Jerome
set sw=2
set laststatus=2
syntax on
set showmatch
"set listchars=tab:▸\ ,trail:.
"set smarttab
"set list " show all hidden character

" From thomas
set ignorecase    " ignore case when searching
set smartcase     " ignore case if search pattern is all lowercase,    case-sensitive otherwise
set hlsearch      " highlight search terms
set incsearch     " show search matches as you type

"NERDTree settings
let NERDTreeShowFiles=1
let NERDTreeShowHidden=1
let NERDTreeMouseMode=2

" vim-go settings
let g:go_fmt_command = "goimports"

"let g:rehash256 = 1
"let g:molokai_original = 1
"colorscheme molokai
colorscheme solarized
set background=light
"set background=dark

source $HOME/work/dot-files/vim/keymaps.vim
source $HOME/work/dot-files/vim/abbreviations.vim

set nocursorcolumn              " Do not highlight column (speeds up highlighting)
set nocursorline                " Do not highlight cursor (speeds up highlighting)
set lazyredraw                  " Wait to redraw
