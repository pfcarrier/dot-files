" Use Vim settings, rather then Vi settings.
" This must be first, because it changes other options as a side effect.
set nocompatible
set nomodeline

" Ensure vim display correctly UTF-8 character
set encoding=utf-8
set fileencoding=utf-8

" Load vim-plug
source $HOME/work/dot-files/vim/plug.vim

" Turn off Ex mode
nnoremap Q <nop>

" ================ General Config ====================

set number                      " Display line number
set relativenumber              " ... relative to cursor location
set backspace=indent,eol,start  " Makes backspace key more powerful
set history=1000                " Store more :cmdline history
set showcmd                     " Show incomplete cmds down the bottom
set showmode                    " Show current mode down the bottom
set showmatch                   " Highlight matching bracket when inserting one
set visualbell                  " No sounds
set autowrite                   " Automatically save before :next, :make etc.
set hidden                      " buffers can exist in the background
                                " http://items.sjbach.com/319/configuring-vim-right

" ============== Syntax highlighting ================

syntax on                       " Turn on syntax highlighting
filetype off                    " Reset filetype detection first ...
filetype plugin indent on       " ... and enable filetype detection

" ================ Turn Off Swap Files ==============

set noswapfile
set nobackup
set nowb

" ================ Indentation ======================

set autoindent
set smartindent
set smarttab
set shiftwidth=2
set softtabstop=2
set tabstop=2
set expandtab

" ================ Folds ============================

set foldmethod=indent   "fold based on indent
set foldnestmax=3       "deepest fold is 3 levels
set nofoldenable        "dont fold by default

" ============ Remember Cursor location =============

" Tell vim to remember certain things when we exit
"  '10  :  marks will be remembered for up to 10 previously edited files
"  "100 :  will save up to 100 lines for each register
"  :20  :  up to 20 lines of command-line history will be remembered
"  %    :  saves and restores the buffer list
"  n... :  where to save the viminfo files
if !has('nvim')
  set viminfo='10,\"100,:20,%,n~/.viminfo
endif

function! ResCur()
  if line("'\"") <= line("$")
    normal! g`"
    return 1
  endif
endfunction

augroup resCur
  autocmd!
  autocmd BufWinEnter * call ResCur()
augroup END

" =================== Scrolling =====================

set scrolloff=8         " Start scrolling when we're 8 lines away from margins
set sidescroll=1        " Activate sidescroll
set sidescrolloff=15    " Start scorlling when we're 15 char from end of line"

" ===================== Search ======================

set smartcase     " ignore case if search pattern is all lowercase
                  " case-sensitive otherwise
set hlsearch      " highlight search terms
set incsearch     " show search matches as you type

" ===================== NERDTree ====================

let NERDTreeShowFiles=1
let NERDTreeShowHidden=1
let NERDTreeMouseMode=2

" ====================== vim-go =====================

let g:go_fmt_command = "goimports"
let g:go_list_type = "quickfix"     " Only use quickfix list to rise issue
let g:go_metalinter_enabled = ['vet', 'golint', 'errcheck']
let g:go_metalinter_autosave = 1
let g:go_metalinter_autosave_enabled = ['vet', 'golint']
let g:go_metalinter_deadline = "5s"

" ====================== Theme ======================

"colorscheme molokai
"set t_Co=256
"let g:rehash256 = 1
"let g:molokai_original = 1

"colorscheme solarized
"set t_Co=256
"let g:solarized_termcolors=256
"set background=light

"highlight LineNr ctermfg=black    " Set number colum to be black

" ================ Status line =======================

set statusline=%<%f\ %h%m%r%{fugitive#statusline()}%=%-14.(%l,%c%V%)\ %P
set laststatus=2                " Always display statusline vs only when split
set ruler                       " Display line count in vim statusline

" ============== Highlight trailing space ===========

set list listchars=tab:\ \ ,trail:Â·
highlight ExtraWhitespace ctermbg=red guibg=red
match ExtraWhitespace /\s\+$/
autocmd BufWinEnter * match ExtraWhitespace /\s\+$/
autocmd InsertEnter * match ExtraWhitespace /\s\+\%#\@<!$/
autocmd InsertLeave * match ExtraWhitespace /\s\+$/
autocmd BufWinLeave * call clearmatches()

" ============ Visual cue past colum 80 =============

"set colorcolumn=80
"highlight ColorColumn ctermfg=white ctermbg=lightgreen
highlight OverLength ctermbg=red ctermfg=white
match OverLength /\%>80v.\+/

" ================= Speedup redraw ==================

set nocursorcolumn              " Do not highlight column (speeds up highlighting)
set nocursorline                " Do not highlight cursor (speeds up highlighting)
set lazyredraw                  " Wait to redraw
set ttyfast                     " Indicate fast terminal conn for faster redraw

" =================== Auto-reload ===================

aug AutoloadVimrc
  au!
  au BufWritePost ~/work/dot-files/vim/vimrc source $MYVIMRC
  au BufWritePost ~/work/dot-files/vim/abbreviations.vim source $MYVIMRC
  au BufWritePost ~/work/dot-files/vim/keymaps.vim source $MYVIMRC
  au BufWritePost ~/work/dot-files/vim/plug.vim source $MYVIMRC
aug END

" =========== Extend % match capabilities ===========

runtime macros/matchit.vim

" ==================== source =======================

source $HOME/work/dot-files/vim/keymaps.vim
source $HOME/work/dot-files/vim/abbreviations.vim
