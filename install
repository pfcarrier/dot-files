#!/usr/bin/env bash

if [[ -z "$1" ]] ; then
  echo "FATAL: args required.  You likely want to run"
  echo "       $0 all"
  exit 1
fi

case "$(uname)" in
  Linux)
    if [[ "$HOME" == *"termux"* ]] ; then
      OS=termux
    elif [[ -e /etc/debian_version ]] ; then
      OS=debian
    else
      echo "FATAL: unknown OS"
      exit 1
    fi
    ;;
  Darwin)
    OS=macos
    ;;
  *)
    echo "FATAL: unknown OS"
    exit 1
    ;;
esac

set -exo pipefail

for args in "$@" ; do
  case "${args}" in
    dep)
      case "${OS}" in
        termux)
          apt-get update
          apt-get install -y \
            vim \
            neovim \
            curl \
            golang \
            git \
            tmate \
            tmux \
            mosh \
            tree
          ;;
        debian)
          sudo apt-get update
          sudo apt-get install -y \
            vim \
            curl \
            git \
            tmate \
            tmux \
            mosh \
            tree \
            keychain
          sudo apt-get install -t jessie-backports \
            golang \
            tmate
          ;;
        macos)
          brew install \
            coreutils \
            vim \
            neovim/neovim/neovim \
            curl \
            golang \
            git \
            tmate \
            tmux \
            mosh \
            tree
          ;;
      esac
      ;;
    repos)
      (
        mkdir -p ~/work
        cd ~/work
        [[ ! -e dot-files ]] && git clone git@github.com:pfcarrier/dot-files.git
        [[ ! -e bash-git-prompt ]] \
          && git clone git@github.com:magicmonty/bash-git-prompt.git
        true # prevent sub shell return code to be false from the last "if"
      )
      ;;
    clean)
      rm -f \
        ~/.vimrc \
        ~/.config/nvim/init.vim \
        ~/.gitconfig \
        ~/.bash_profile \
        ~/work/bash-git-prompt/themes/p2.bgptheme
      ;;
    init)
      curl -fLo ~/.vim/autoload/plug.vim --create-dirs \
        https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
      curl -fLo ~/.local/share/nvim/site/autoload/plug.vim --create-dirs \
        https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
      mkdir -p ~/.config/nvim/
      ln -s ~/.vimrc ~/.config/nvim/init.vim
      ln -s ~/work/dot-files/vim/vimrc ~/.vimrc
      ln -s ~/work/dot-files/gitconfig ~/.gitconfig
      ln -s ~/work/dot-files/bash_profile ~/.bash_profile
      ln -s ~/work/dot-files/bash-git-prompt/p2.bgptheme \
        ~/work/bash-git-prompt/themes/p2.bgptheme
      source ~/.bash_profile
      bash -c "</dev/tty vim -c PlugInstall -c q -c q"
      bash -c "</dev/tty vim -c GoInstallBinaries -c q -c q"
      if which nvim &>/dev/null ; then
        bash -c "</dev/tty nvim -c PlugInstall -c q -c q"
        bash -c "</dev/tty nvim -c GoInstallBinaries -c q -c q"
      fi
      #vim -E -c GoUpdateBinaries -c q -c q
      #nvim -E -c GoUpdateBinaries -c q -c q
      ;;
    all)
      exec bash $0 dep repos clean init
      ;;
    *)
      echo "FATAL:  unknown option '$args'"
      exit 1
      ;;
  esac
done

echo "complete"
