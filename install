#!/usr/bin/env bash

set -exo pipefail

if [[ -z "$1" ]] ; then
  echo "FATAL: args required.  You likely want to run"
  echo "       $0 all"
  exit 1
fi

case "$(uname)" in
  Linux)
    if [[ "$HOME" == *"termux"* ]] ; then
      OS=termux
    elif [[ -e /etc/debian_version ]] ; then
      OS=debian
    else
      echo "FATAL: unknown OS"
      exit 1
    fi
    ;;
  Darwin)
    OS=macos
    ;;
  *)
    echo "FATAL: unknown OS"
    exit 1
    ;;
esac

function dep(){
  case "${OS}" in
    termux)
      apt-get update
      apt-get install -y \
        vim \
        neovim \
        curl \
        golang \
        git \
        tmate \
        tmux \
        mosh \
        tree \
        ctags
      ;;
    debian)
      sudo apt-get update
      sudo apt-get install -y \
        vim \
        curl \
        git \
        tmux \
        mosh \
        tree \
        keychain \
        ctags \
        golang \
        tmate
      ;;
    macos)
      brew install --upgrade \
        coreutils \
        vim \
        bash \
        bash-completion@2 \
        neovim/neovim/neovim \
        curl \
        golang \
        git \
        tmate \
        tmux \
        mosh \
        tree \
        ctags
      ;;
  esac
}

function repos(){
  (
    mkdir -p ~/work
    cd ~/work
    [[ ! -e dot-files ]] && git clone git@github.com:pfcarrier/dot-files.git
    [[ ! -e bash-git-prompt ]] \
      && git clone git@github.com:magicmonty/bash-git-prompt.git
    true # prevent sub shell return code to be false from the last "if"
  )
}

function clean(){
  rm -f \
    ~/.vimrc \
    ~/.config/nvim/init.vim \
    ~/.config/terminator/config \
    ~/.gitconfig \
    ~/.bash_profile \
    ~/work/bash-git-prompt/themes/p2.bgptheme \
    ~/.tmux.conf
}

function init(){
  curl -fLo ~/.vim/autoload/plug.vim --create-dirs \
    https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  curl -fLo ~/.local/share/nvim/site/autoload/plug.vim --create-dirs \
    https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  mkdir -p ~/.config/nvim/
  mkdir -p ~/.config/terminator/
  ln -s ~/.vimrc ~/.config/nvim/init.vim
  ln -s ~/work/dot-files/vim/vimrc ~/.vimrc
  ln -s ~/work/dot-files/gitconfig ~/.gitconfig
  ln -s ~/work/dot-files/tmux.conf ~/.tmux.conf
  ln -s ~/work/dot-files/bash_profile ~/.bash_profile
  ln -s ~/work/dot-files/bash-git-prompt/p2.bgptheme \
    ~/work/bash-git-prompt/themes/p2.bgptheme
  ln -s ~/work/dot-files/terminator \
    ~/.config/terminator/config
  bash -c "</dev/tty vim -c PlugInstall -c q -c q"
  bash -c "</dev/tty vim -c PlugUpdate -c q -c q"
  bash -c "</dev/tty vim -c GoInstallBinaries -c q -c q"
  if which nvim &>/dev/null ; then
    bash -c "</dev/tty nvim -c PlugInstall -c q -c q"
    bash -c "</dev/tty nvim -c PlugUpdate -c q -c q"
    bash -c "</dev/tty nvim -c GoInstallBinaries -c q -c q"
  fi
  #vim -E -c GoUpdateBinaries -c q -c q
  #nvim -E -c GoUpdateBinaries -c q -c q
}

for args in "$@" ; do
  case "${args}" in
    dep)
      dep
      ;;
    repos)
      repos
      ;;
    clean)
      clean
      ;;
    init)
      init
      ;;
    all)
      dep
      repos
      clean
      init
      ;;
    *)
      echo "FATAL:  unknown option '$args'"
      exit 1
      ;;
  esac
done

echo "complete"
